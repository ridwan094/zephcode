@use "../abstracts/variables" as vars;

/* Default Borders */
.zc-border {
    border: 1px solid vars.$border-color !important;
}

.zc-border-0 {
    border: none !important;
}

/* Border Colors */
.zc-border-primary {
    background-color: rgba(vars.$primary-color, 0.2);
    border-color: vars.$primary-color;
}

.zc-border-secondary {
    background-color: rgba(vars.$secondary-color, 0.2);
    border-color: vars.$secondary-color;
}

.zc-border-success {
    background-color: rgba(vars.$success-color, 0.2);
    border-color: vars.$success-color;
}

.zc-border-danger {
    background-color: rgba(vars.$danger-color, 0.2);
    border-color: vars.$danger-color;
}

.zc-border-warning {
    background-color: rgba(vars.$warning-color, 0.2);
    border-color: vars.$warning-color;
}

.zc-border-info {
    border-color: vars.$info-color !important;
}

/* Border Radius */
.zc-rounded {
    border-radius: vars.$border-radius !important;
}

.zc-rounded-lg {
    border-radius: vars.$border-radius-lg;
    width: 200px;
    height: 200px;
}

.zc-rounded-circle {
    border-radius: 50% !important;
}

/* Specific Borders */
.zc-border-top {
    border-top: 1px solid vars.$border-color !important;
}

.zc-border-bottom {
    border-bottom: 1px solid vars.$border-color !important;
}

.zc-border-left {
    border-left: 1px solid vars.$border-color !important;
}

.zc-border-right {
    border-right: 1px solid vars.$border-color !important;
}

/* Border Thickness */
.zc-border-thin {
    border-width: 1px !important;
}

.zc-border-thick {
    border-width: 2px !important;
}

/* Border Variants for Examples */
.zc-border-variants {
    display: flex;
    gap: vars.$spacing-md;
    margin-bottom: vars.$spacing-xl;
}

.zc-border-radius-variants {
    display: flex;
    gap: vars.$spacing-md;
    margin-bottom: vars.$spacing-xl;
}

.zc-border-item {
    text-align: center;
    padding: vars.$spacing-md;
    width: 150px;
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid vars.$border-color;
    background-color: vars.$white; 
    transition: all 0.3s ease;

    &:hover {
        border-color: vars.$primary-color;
        transform: scale(1.05);
        animation: border-pulse 1s ease infinite;
    }
}

/* Debugging Utility */
.zc-border-debug {
    border: 1px dashed vars.$danger-color;
    background-color: rgba(vars.$danger-color, 0.1);
}

/* Animations */
@keyframes border-pulse {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(vars.$primary-color, 0.5);
    }
    50% {
        box-shadow: 0 0 10px 10px rgba(vars.$primary-color, 0);
    }
}

.zc-border-fade {
    animation: fade-border 0.5s ease-in-out infinite;
}

@keyframes fade-border {
    0% {
        border-color: rgba(vars.$primary-color, 0);
    }
    50% {
        border-color: rgba(vars.$primary-color, 1);
    }
    100% {
        border-color: rgba(vars.$primary-color, 0);
    }
}

/* Hover Effects for Examples */
.zc-border-hover {
    transition: transform 0.3s ease, background-color 0.3s ease;

    &:hover {
        transform: scale(1.05);
        background-color: rgba(vars.$primary-color, 0.05);
    }
}

/* Background Colors for Border Items */
.zc-border-item {
    background-color: vars.$white;
    color: vars.$text-color;

    &.zc-border-primary {
        background-color: rgba(vars.$primary-color, 0.1);
    }

    &.zc-border-secondary {
        background-color: rgba(vars.$secondary-color, 0.1);
    }

    &.zc-border-success {
        background-color: rgba(vars.$success-color, 0.1);
    }

    &.zc-border-danger {
        background-color: rgba(vars.$danger-color, 0.1);
    }

    &.zc-border-warning {
        background-color: rgba(vars.$warning-color, 0.1);
    }

    &.zc-border-info {
        background-color: rgba(vars.$info-color, 0.1);
    }

    &.zc-border-debug {
        background-color: rgba(vars.$danger-color, 0.1);
        border: 1px dashed vars.$danger-color;
    }
}
